@page "/Userlogin"
@using Employee_Crud_Blazor.Data
@inject UsersService usersService
@inject NavigationManager NavigationManager

<NavLink class="nav-link" href="AddNewUser">
    <span class="oi oi-plus" aria-hidden="true"> Add New User</span>
</NavLink>

<h3>Login</h3>

<form>
    <div class="form-group">
        <label for="username">Username:</label>
        <input id="username" type="text" class="form-control" @bind="username" />
    </div>
    <div class="form-group">
        <label for="password">Password:</label>
        <input id="password" type="password" class="form-control" @bind="password" />
    </div>
    <button type="button" class="btn btn-primary" @onclick="Login">Login</button>
</form>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="text-danger">@errorMessage</p>
}

@code {
    private string username;
    private string password;
    private string errorMessage;
    private Users obj;

    private async Task Login()
    {
        // Validate user credentials
        obj = await usersService.GetUserByUsernameAsync(username);

        // Check if user is valid
        if (obj != null && password == obj.Password && username == obj.Login)
        {
            // Redirect to a protected page after successful login
            NavigationManager.NavigateTo($"/UserHomePage/{obj.Login}");
        }
        else if (password.ToLower() == "admin" && username.ToLower() == "admin")
        {
            NavigationManager.NavigateTo("/Users");
        }
        else
        {
            // Display an error message
            errorMessage = "Invalid username or password.";
        }
    }
}
