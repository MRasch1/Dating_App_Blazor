@page "/UserHomePage/{login}"
@using Employee_Crud_Blazor.Data
@inject UsersService userService
@inject UserProfileService userProfileService
@inject NavigationManager NavigationManager

<h3>UserHomePage</h3>

<p>Hej @login</p>

<p>Dette er dit ID: @userObj.Id</p>

@if (userProfileObj != null)
{
    <tbody>
        <tr>
            <td>
                <a class="nav-link btn btn-primary" href="/EditUserProfile/@userProfileObj.UsersId">
                    <span class="oi oi-pencil" aria-hidden="true"> Edit Profile</span>
                </a>
            </td>
            <td>
                <a class="nav-link btn btn-danger" style="color: white" href="DeleteUserProfile/@userProfileObj.UsersId">
                    <span class="oi oi-trash" aria-hidden="true"> Delete</span>
                </a>
            </td>
            <td>
                <a class="nav-link btn btn-info" style="color: white" href="UserProfileSearch/@userProfileObj.UsersId">
                    <span class="oi oi-trash" aria-hidden="true"> Search for UserProfiles</span>
                </a>
            </td>
        </tr>
    </tbody>
}
else
{
    <tbody>
        <tr>
            <td>
                <a class="nav-link btn btn-primary" href="AddNewUserProfile/@userObj.Id">
                    <span class="oi oi-pencil" aria-hidden="true"> Add New UserProfile</span>
                </a>
            </td>
        </tr>
    </tbody>
}




@code {
    [Parameter]
    public string login { get; set; }
    Users userObj = new Users();
    UserProfile userProfileObj = new UserProfile();


    protected override async Task OnInitializedAsync()
    {
        userObj = await Task.Run(() => userService.GetUserByUsernameAsync((login)));

        userProfileObj = await Task.Run(() => userProfileService.GetUserProfileByUserId((userObj.Id)));
    }

}
